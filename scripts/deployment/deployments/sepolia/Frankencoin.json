{
  "address": "0x5037Df9b4Fb98FE5d4e106Ba615D45d625138FAF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "applicationPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "applicationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "MinterApplied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "MinterDenied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MIN_APPLICATION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "reservePPM",
          "type": "uint32"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "helpers",
          "type": "address[]"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "denyMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "reservePPM",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "feesPPM",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "notifyLoss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "position",
          "type": "address"
        }
      ],
      "name": "registerPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveTargetFulfilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "applicationPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "applicationFee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "suggestMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc6bc4db482e1e72766f2fd0736a4047167733e39de5fe91878b6324c91332110",
  "receipt": {
    "to": null,
    "from": "0x0aB6527027EcFF1144dEc3d78154fce309ac838c",
    "contractAddress": "0x5037Df9b4Fb98FE5d4e106Ba615D45d625138FAF",
    "transactionIndex": 1,
    "gasUsed": "1258696",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x50a2a7563809d04dca780b66fd5e50254d867764ac30275be5c9b6d56a5199f9",
    "transactionHash": "0xc6bc4db482e1e72766f2fd0736a4047167733e39de5fe91878b6324c91332110",
    "logs": [],
    "blockNumber": 1601698,
    "cumulativeGasUsed": "1288259",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA365E1B43Dd4F6fbAD6b450AbFEf4C4C2db392d9"
  ],
  "numDeployments": 2,
  "solcInputHash": "1f04a4c1b32c645347f16fe8381bf97e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"applicationPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"applicationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MinterApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MinterDenied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_APPLICATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"reservePPM\",\"type\":\"uint32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"helpers\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"denyMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"reservePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feesPPM\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyLoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"position\",\"type\":\"address\"}],\"name\":\"registerPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveTargetFulfilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"applicationPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"applicationFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"suggestMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Frankencoin.sol\":\"Frankencoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Copied and adjusted from OpenZeppelin\\n// Adjustments:\\n// - modifications to support ERC-677\\n// - removed require messages to save space\\n// - removed unnecessary require statements\\n// - removed GSN Context\\n// - upgraded to 0.8 to drop SafeMath\\n// - let name() and symbol() be implemented by subclass\\n// - infinite allowance support, with 2^255 and above considered infinite\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IERC677Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the `IERC20` interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using `_mint`.\\n * For a generic mechanism see `ERC20Mintable`.\\n *\\n * *For a detailed writeup see our guide [How to implement supply\\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See `IERC20.approve`.\\n */\\n\\nabstract contract ERC20 is IERC20 {\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    uint8 public immutable override decimals;\\n\\n    constructor(uint8 _decimals) {\\n        decimals = _decimals;\\n    }\\n\\n    /**\\n     * @dev See `IERC20.totalSupply`.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See `IERC20.balanceOf`.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See `IERC20.transfer`.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See `IERC20.allowance`.\\n     */\\n    function allowance(address owner, address spender) external view override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See `IERC20.approve`.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) external override returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See `IERC20.transferFrom`.\\n     *\\n     * Emits an `Approval` event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of `ERC20`;\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `value`.\\n     * - the caller must have allowance for `sender`'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        uint256 currentAllowance = _allowances[sender][msg.sender];\\n        if (currentAllowance < (1 << 255)){\\n            // Only decrease the allowance if it was not set to 'infinite'\\n            // Documented in /doc/infiniteallowance.md\\n            _approve(sender, msg.sender, currentAllowance - amount);\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to `transfer`, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a `Transfer` event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(recipient != address(0));\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] -= amount;\\n        _balances[recipient] += amount;\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    // ERC-677 functionality, can be useful for swapping and wrapping tokens\\n    function transferAndCall(address recipient, uint256 amount, bytes calldata data) external override returns (bool) {\\n        bool success = transfer(recipient, amount);\\n        if (success){\\n            success = IERC677Receiver(recipient).onTokenTransfer(msg.sender, amount, data);\\n        }\\n        return success;\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a `Transfer` event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address recipient, uint256 amount) internal virtual {\\n        require(recipient != address(0));\\n\\n        _beforeTokenTransfer(address(0), recipient, amount);\\n\\n        _totalSupply += amount;\\n        _balances[recipient] += amount;\\n        emit Transfer(address(0), recipient, amount);\\n    }\\n\\n     /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a `Transfer` event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _totalSupply -= amount;\\n        _balances[account] -= amount;\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an `Approval` event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _allowances[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) virtual internal {\\n    }\\n}\",\"keccak256\":\"0xe5ab83c4a7b9a80927d9ae13c1d822ba665f6557574a6d85934b39380b005776\",\"license\":\"MIT\"},\"contracts/Frankencoin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./IReservePool.sol\\\";\\nimport \\\"./IFrankencoin.sol\\\";\\n\\ncontract Frankencoin is ERC20, IFrankencoin {\\n\\n   uint256 public constant MIN_FEE = 1000 * (10**18);\\n   uint256 public constant MIN_APPLICATION_PERIOD = 10 days;\\n\\n   address override public immutable reserve;\\n   uint256 public reserveTarget;\\n\\n   mapping (address => uint256) public minters;\\n   mapping (address => address) public positions;\\n\\n   event MinterApplied(address indexed minter, uint256 applicationPeriod, uint256 applicationFee, string message);\\n   event MinterDenied(address indexed minter, string message);\\n\\n   constructor(address _reserve) ERC20(18){\\n      reserve = _reserve;\\n   }\\n\\n   function name() override external pure returns (string memory){\\n      return \\\"Frankencoin V1\\\";\\n   }\\n\\n   function symbol() override external pure returns (string memory){\\n      return \\\"ZCHF\\\";\\n   }\\n\\n   function suggestMinter(address minter, uint256 applicationPeriod, \\n      uint256 applicationFee, string calldata message) override external \\n   {\\n      require(applicationPeriod >= MIN_APPLICATION_PERIOD || totalSupply() == 0, \\\"period too short\\\");\\n      require(applicationFee >= MIN_FEE || totalSupply() == 0, \\\"fee too low\\\");\\n      require(minters[minter] == 0, \\\"already registered\\\");\\n      _transfer(msg.sender, reserve, applicationFee);\\n      minters[minter] = block.timestamp + applicationPeriod;\\n      emit MinterApplied(minter, applicationPeriod, applicationFee, message);\\n   }\\n\\n   function registerPosition(address position) override external {\\n      require(isMinter(msg.sender), \\\"not minter\\\");\\n      positions[position] = msg.sender;\\n   }\\n\\n   function denyMinter(address minter, address[] calldata helpers, \\n      string calldata message) override external \\n   {\\n      require(block.timestamp <= minters[minter], \\\"too late\\\");\\n      require(IReservePool(reserve).isQualified(msg.sender, helpers), \\\"not qualified\\\");\\n      delete minters[minter];\\n      emit MinterDenied(minter, message);\\n   }\\n\\n   function mint(address target, uint256 amount, uint32 reservePPM, \\n      uint32 feesPPM) override external minterOnly \\n   {\\n      uint256 reserveAmount = amount * reservePPM;\\n      reserveTarget += reserveAmount;\\n      reserveAmount /= 1000_000;\\n      uint256 fees = amount * feesPPM / 1000_000;\\n      _mint(target, amount - reserveAmount - fees);\\n      _mint(reserve, reserveAmount + fees);\\n      IERC677Receiver(reserve).onTokenTransfer(msg.sender, reserveAmount, new bytes(0));\\n   }\\n\\n   function mint(address target, uint256 amount) override external minterOnly {\\n      _mint(target, amount);\\n   }\\n\\n   function burn(uint256 amount) external {\\n      _burn(msg.sender, amount);\\n   }\\n\\n   function burn(uint256 amount, uint32 reservePPM) override external minterOnly {\\n      _burn(msg.sender, amount);\\n      reserveTarget -= reservePPM * amount;\\n   }\\n\\n   function burn(address owner, uint256 amount) override external minterOnly {\\n      _burn(owner, amount);\\n   }\\n\\n   modifier minterOnly() {\\n      require(isMinter(msg.sender) || isMinter(positions[msg.sender]), \\\"not approved minter\\\");\\n      _;\\n   }\\n\\n   function notifyLoss(uint256 amount) override external minterOnly {\\n      uint256 reserveLeft = balanceOf(reserve);\\n      if (reserveLeft >= amount){\\n         _transfer(reserve, msg.sender, amount);\\n      } else {\\n         _transfer(reserve, msg.sender, reserveLeft);\\n         _mint(msg.sender, amount - reserveLeft);\\n      }\\n   }\\n\\n   function isMinter(address minter) override public view returns (bool){\\n      return minters[minter]!=0 && block.timestamp > minters[minter];\\n   }\\n\\n   function reserves() external view returns (uint256) {\\n      return balanceOf(reserve);\\n   }\\n\\n   function getReserveTarget() public view returns (uint256) {\\n      return reserveTarget / 1000000;\\n   }\\n\\n   function reserveTargetFulfilled() override public view returns (bool) {\\n      return reserveTarget <= balanceOf(reserve) * 1000000;\\n   }\\n\\n}\\n\",\"keccak256\":\"0xc76da0e98d8bbad6b29aba98bf8cd1ea8498d19de1d8dcdb6da34ab74538f3d6\",\"license\":\"MIT\"},\"contracts/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function transferAndCall(address recipient, uint256 amount, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0xca95e6b6324b1c92dca4759b3da5fc251053691de885f2e23021eb5abdddea9c\",\"license\":\"MIT\"},\"contracts/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC677Receiver {\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0x40703acdfa2126286b117ad0cca84c0a4ca2d3b18586765186c9bdd8ad5cf744\",\"license\":\"MIT\"},\"contracts/IFrankencoin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IFrankencoin is IERC20 {\\n\\n    function suggestMinter(address minter, uint256 applicationPeriod, uint256 applicationFee, string calldata message) external;\\n\\n    function registerPosition(address position) external;\\n\\n    function denyMinter(address minter, address[] calldata helpers, string calldata message) external;\\n\\n    function reserve() external view returns (address);\\n\\n    function isMinter(address minter) external view returns (bool);\\n    \\n    function mint(address target, uint256 amount) external;\\n\\n    function mint(address target, uint256 amount, uint32 reservePPM, uint32 feePPM) external;\\n\\n    function burn(uint256 amount, uint32 reservePPM) external;\\n\\n    function burn(address target, uint256 amount) external;\\n\\n    function notifyLoss(uint256 amount) external;\\n\\n    function reserveTargetFulfilled() external view returns (bool);\\n\\n}\",\"keccak256\":\"0xf890a8acdd6d88c99217b12c903a657dbe6db05ce55892563c5592bccc073e9e\",\"license\":\"MIT\"},\"contracts/IReservePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IReservePool is IERC20 {\\n   function delegateVoteTo(address delegate) external;\\n   function isQualified(address sender, address[] calldata helpers) external view returns (bool);\\n   function redeem(uint256 shares) external returns (uint256);\\n   function redeemableBalance(address holder) external view returns (uint256);\\n   function redeemFraction(uint256 partsPerMillion) external returns (uint256);\\n}\",\"keccak256\":\"0xca0d7b12f466aed3585cf7804b771c95465532fa59b9b67729f7b84cce49d42b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b506040516116aa3803806116aa83398101604081905261002f91610045565b60126080526001600160a01b031660a052610075565b60006020828403121561005757600080fd5b81516001600160a01b038116811461006e57600080fd5b9392505050565b60805160a0516115d16100d96000396000818161036601528181610464015281816106ba015281816106fd01528181610728015281816107700152818161082001528181610ba101528181610bef0152610d770152600061026701526115d16000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806376c7a3c711610104578063a9059cbb116100a2578063cd3293de11610071578063cd3293de1461045f578063d1a15ff114610486578063dd62ed3e14610499578063f46eccc4146104d257600080fd5b8063a9059cbb14610413578063aa271e1a14610426578063b52c696d14610439578063cbca628e1461044c57600080fd5b80639b404da6116100de5780639b404da6146103d25780639cc06358146103e55780639dc29fac146103f8578063a16498d91461040b57600080fd5b806376c7a3c71461039a57806381676185146103aa57806395d89b41146103b257600080fd5b80634000aea01161017157806355f575101161014b57806355f57510146102df57806361f3d1101461032057806370a082311461033357806375172a8b1461035c57600080fd5b80634000aea0146102a457806340c10f19146102b757806342966c68146102cc57600080fd5b80631a46c7e9116101ad5780631a46c7e91461024557806323b872dd1461024f578063313ce5671461026257806331ae50bc1461029b57600080fd5b806306fdde03146101d4578063095ea7b31461021057806318160ddd14610233575b600080fd5b60408051808201909152600e81526d4672616e6b656e636f696e20563160901b60208201525b604051610207919061107b565b60405180910390f35b61022361021e3660046110b1565b6104f2565b6040519015158152602001610207565b6002545b604051908152602001610207565b610237620d2f0081565b61022361025d3660046110db565b610508565b6102897f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610207565b61023760035481565b6102236102b2366004611160565b610564565b6102ca6102c53660046110b1565b6105fa565b005b6102ca6102da3660046111ba565b61065e565b6103086102ed3660046111d3565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6102ca61032e3660046111ba565b61066b565b6102376103413660046111d3565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600090815260208190526040902054610237565b610237683635c9adc5dea0000081565b610223610766565b6040805180820190915260048152632d21a42360e11b60208201526101fa565b6102ca6103e03660046111ee565b6107b6565b6102ca6103f33660046112b4565b610932565b6102ca6104063660046110b1565b6109b3565b610237610a0a565b6102236104213660046110b1565b610a1d565b6102236104343660046111d3565b610a2a565b6102ca6104473660046111d3565b610a6e565b6102ca61045a3660046112e0565b610ad9565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b6102ca61049436600461132d565b610c73565b6102376104a7366004611384565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102376104e03660046111d3565b60046020526000908152604090205481565b60006104ff338484610df9565b50600192915050565b6000610515848484610e5b565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b81101561055957610559853361055486856113c4565b610df9565b506001949350505050565b6000806105718686610a1d565b905080156105f157604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906105ab903390899089908990600401611404565b6020604051808303816000875af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190611436565b90505b95945050505050565b61060333610a2a565b8061062b57503360009081526005602052604090205461062b906001600160a01b0316610a2a565b6106505760405162461bcd60e51b815260040161064790611458565b60405180910390fd5b61065a8282610f0f565b5050565b6106683382610fac565b50565b61067433610a2a565b8061069c57503360009081526005602052604090205461069c906001600160a01b0316610a2a565b6106b85760405162461bcd60e51b815260040161064790611458565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166000908152602081905260409020548181106107235761065a7f00000000000000000000000000000000000000000000000000000000000000003384610e5b565b61074e7f00000000000000000000000000000000000000000000000000000000000000003383610e5b565b61065a3361075c83856113c4565b610f0f565b905090565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152602081905260408120546107ac90620f4240611485565b6003541115905090565b6001600160a01b0385166000908152600460205260409020544211156108095760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610647565b604051635e1121cf60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e1121cf90610859903390889088906004016114a4565b602060405180830381865afa158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a9190611436565b6108d65760405162461bcd60e51b815260206004820152600d60248201526c1b9bdd081c5d585b1a599a5959609a1b6044820152606401610647565b6001600160a01b03851660008181526004602052604080822091909155517fd60c86e83346fdbe3124cb7d1cba32973a9f62d05c4ec801bfe6c09d103803819061092390859085906114fe565b60405180910390a25050505050565b61093b33610a2a565b80610963575033600090815260056020526040902054610963906001600160a01b0316610a2a565b61097f5760405162461bcd60e51b815260040161064790611458565b6109893383610fac565b6109998263ffffffff8316611485565b600360008282546109aa91906113c4565b90915550505050565b6109bc33610a2a565b806109e45750336000908152600560205260409020546109e4906001600160a01b0316610a2a565b610a005760405162461bcd60e51b815260040161064790611458565b61065a8282610fac565b6000620f4240600354610761919061151a565b60006104ff338484610e5b565b6001600160a01b03811660009081526004602052604081205415801590610a6857506001600160a01b03821660009081526004602052604090205442115b92915050565b610a7733610a2a565b610ab05760405162461bcd60e51b815260206004820152600a6024820152693737ba1036b4b73a32b960b11b6044820152606401610647565b6001600160a01b0316600090815260056020526040902080546001600160a01b03191633179055565b610ae233610a2a565b80610b0a575033600090815260056020526040902054610b0a906001600160a01b0316610a2a565b610b265760405162461bcd60e51b815260040161064790611458565b6000610b3863ffffffff841685611485565b90508060036000828254610b4c919061153c565b90915550610b5f9050620f42408261151a565b90506000620f4240610b7763ffffffff851687611485565b610b81919061151a565b9050610b9c8682610b9285896113c4565b61075c91906113c4565b610bca7f000000000000000000000000000000000000000000000000000000000000000061075c838561153c565b60408051600081526020810191829052635260769b60e11b9091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a4c0ed3690610c27903390869060248101611554565b6020604051808303816000875af1158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a9190611436565b50505050505050565b620d2f0084101580610c855750600254155b610cc45760405162461bcd60e51b815260206004820152601060248201526f1c195c9a5bd9081d1bdbc81cda1bdc9d60821b6044820152606401610647565b683635c9adc5dea0000083101580610cdc5750600254155b610d165760405162461bcd60e51b815260206004820152600b60248201526a66656520746f6f206c6f7760a81b6044820152606401610647565b6001600160a01b03851660009081526004602052604090205415610d715760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b6044820152606401610647565b610d9c337f000000000000000000000000000000000000000000000000000000000000000085610e5b565b610da6844261153c565b6001600160a01b038616600081815260046020526040908190209290925590517f97326258efdae63280617ca33884e507791c2abeed7b82acd77f1853394ef94b9061092390879087908790879061157b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610e6e57600080fd5b6001600160a01b03831660009081526020819052604081208054839290610e969084906113c4565b90915550506001600160a01b03821660009081526020819052604081208054839290610ec390849061153c565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e4e91815260200190565b6001600160a01b038216610f2257600080fd5b8060026000828254610f34919061153c565b90915550506001600160a01b03821660009081526020819052604081208054839290610f6190849061153c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b8060026000828254610fbe91906113c4565b90915550506001600160a01b03821660009081526020819052604081208054839290610feb9084906113c4565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610fa0565b6000815180845260005b8181101561105457602081850181015186830182015201611038565b81811115611066576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061108e602083018461102e565b9392505050565b80356001600160a01b03811681146110ac57600080fd5b919050565b600080604083850312156110c457600080fd5b6110cd83611095565b946020939093013593505050565b6000806000606084860312156110f057600080fd5b6110f984611095565b925061110760208501611095565b9150604084013590509250925092565b60008083601f84011261112957600080fd5b50813567ffffffffffffffff81111561114157600080fd5b60208301915083602082850101111561115957600080fd5b9250929050565b6000806000806060858703121561117657600080fd5b61117f85611095565b935060208501359250604085013567ffffffffffffffff8111156111a257600080fd5b6111ae87828801611117565b95989497509550505050565b6000602082840312156111cc57600080fd5b5035919050565b6000602082840312156111e557600080fd5b61108e82611095565b60008060008060006060868803121561120657600080fd5b61120f86611095565b9450602086013567ffffffffffffffff8082111561122c57600080fd5b818801915088601f83011261124057600080fd5b81358181111561124f57600080fd5b8960208260051b850101111561126457600080fd5b60208301965080955050604088013591508082111561128257600080fd5b5061128f88828901611117565b969995985093965092949392505050565b803563ffffffff811681146110ac57600080fd5b600080604083850312156112c757600080fd5b823591506112d7602084016112a0565b90509250929050565b600080600080608085870312156112f657600080fd5b6112ff85611095565b935060208501359250611314604086016112a0565b9150611322606086016112a0565b905092959194509250565b60008060008060006080868803121561134557600080fd5b61134e86611095565b94506020860135935060408601359250606086013567ffffffffffffffff81111561137857600080fd5b61128f88828901611117565b6000806040838503121561139757600080fd5b6113a083611095565b91506112d760208401611095565b634e487b7160e01b600052601160045260246000fd5b6000828210156113d6576113d66113ae565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038516815283602082015260606040820152600061142c6060830184866113db565b9695505050505050565b60006020828403121561144857600080fd5b8151801515811461108e57600080fd5b6020808252601390820152723737ba1030b8383937bb32b21036b4b73a32b960691b604082015260600190565b600081600019048311821515161561149f5761149f6113ae565b500290565b6001600160a01b03848116825260406020808401829052908301849052600091859160608501845b878110156114f157836114de86611095565b16825293820193908201906001016114cc565b5098975050505050505050565b6020815260006115126020830184866113db565b949350505050565b60008261153757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561154f5761154f6113ae565b500190565b60018060a01b03841681528260208201526060604082015260006105f1606083018461102e565b84815283602082015260606040820152600061142c6060830184866113db56fea26469706673582212200a2e9f077ab13b83f377e7138feb10d45e70872a77ae7ca15252cd7119eb924a64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806376c7a3c711610104578063a9059cbb116100a2578063cd3293de11610071578063cd3293de1461045f578063d1a15ff114610486578063dd62ed3e14610499578063f46eccc4146104d257600080fd5b8063a9059cbb14610413578063aa271e1a14610426578063b52c696d14610439578063cbca628e1461044c57600080fd5b80639b404da6116100de5780639b404da6146103d25780639cc06358146103e55780639dc29fac146103f8578063a16498d91461040b57600080fd5b806376c7a3c71461039a57806381676185146103aa57806395d89b41146103b257600080fd5b80634000aea01161017157806355f575101161014b57806355f57510146102df57806361f3d1101461032057806370a082311461033357806375172a8b1461035c57600080fd5b80634000aea0146102a457806340c10f19146102b757806342966c68146102cc57600080fd5b80631a46c7e9116101ad5780631a46c7e91461024557806323b872dd1461024f578063313ce5671461026257806331ae50bc1461029b57600080fd5b806306fdde03146101d4578063095ea7b31461021057806318160ddd14610233575b600080fd5b60408051808201909152600e81526d4672616e6b656e636f696e20563160901b60208201525b604051610207919061107b565b60405180910390f35b61022361021e3660046110b1565b6104f2565b6040519015158152602001610207565b6002545b604051908152602001610207565b610237620d2f0081565b61022361025d3660046110db565b610508565b6102897f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610207565b61023760035481565b6102236102b2366004611160565b610564565b6102ca6102c53660046110b1565b6105fa565b005b6102ca6102da3660046111ba565b61065e565b6103086102ed3660046111d3565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6102ca61032e3660046111ba565b61066b565b6102376103413660046111d3565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600090815260208190526040902054610237565b610237683635c9adc5dea0000081565b610223610766565b6040805180820190915260048152632d21a42360e11b60208201526101fa565b6102ca6103e03660046111ee565b6107b6565b6102ca6103f33660046112b4565b610932565b6102ca6104063660046110b1565b6109b3565b610237610a0a565b6102236104213660046110b1565b610a1d565b6102236104343660046111d3565b610a2a565b6102ca6104473660046111d3565b610a6e565b6102ca61045a3660046112e0565b610ad9565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b6102ca61049436600461132d565b610c73565b6102376104a7366004611384565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102376104e03660046111d3565b60046020526000908152604090205481565b60006104ff338484610df9565b50600192915050565b6000610515848484610e5b565b6001600160a01b0384166000908152600160209081526040808320338452909152902054600160ff1b81101561055957610559853361055486856113c4565b610df9565b506001949350505050565b6000806105718686610a1d565b905080156105f157604051635260769b60e11b81526001600160a01b0387169063a4c0ed36906105ab903390899089908990600401611404565b6020604051808303816000875af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190611436565b90505b95945050505050565b61060333610a2a565b8061062b57503360009081526005602052604090205461062b906001600160a01b0316610a2a565b6106505760405162461bcd60e51b815260040161064790611458565b60405180910390fd5b61065a8282610f0f565b5050565b6106683382610fac565b50565b61067433610a2a565b8061069c57503360009081526005602052604090205461069c906001600160a01b0316610a2a565b6106b85760405162461bcd60e51b815260040161064790611458565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166000908152602081905260409020548181106107235761065a7f00000000000000000000000000000000000000000000000000000000000000003384610e5b565b61074e7f00000000000000000000000000000000000000000000000000000000000000003383610e5b565b61065a3361075c83856113c4565b610f0f565b905090565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152602081905260408120546107ac90620f4240611485565b6003541115905090565b6001600160a01b0385166000908152600460205260409020544211156108095760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610647565b604051635e1121cf60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e1121cf90610859903390889088906004016114a4565b602060405180830381865afa158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a9190611436565b6108d65760405162461bcd60e51b815260206004820152600d60248201526c1b9bdd081c5d585b1a599a5959609a1b6044820152606401610647565b6001600160a01b03851660008181526004602052604080822091909155517fd60c86e83346fdbe3124cb7d1cba32973a9f62d05c4ec801bfe6c09d103803819061092390859085906114fe565b60405180910390a25050505050565b61093b33610a2a565b80610963575033600090815260056020526040902054610963906001600160a01b0316610a2a565b61097f5760405162461bcd60e51b815260040161064790611458565b6109893383610fac565b6109998263ffffffff8316611485565b600360008282546109aa91906113c4565b90915550505050565b6109bc33610a2a565b806109e45750336000908152600560205260409020546109e4906001600160a01b0316610a2a565b610a005760405162461bcd60e51b815260040161064790611458565b61065a8282610fac565b6000620f4240600354610761919061151a565b60006104ff338484610e5b565b6001600160a01b03811660009081526004602052604081205415801590610a6857506001600160a01b03821660009081526004602052604090205442115b92915050565b610a7733610a2a565b610ab05760405162461bcd60e51b815260206004820152600a6024820152693737ba1036b4b73a32b960b11b6044820152606401610647565b6001600160a01b0316600090815260056020526040902080546001600160a01b03191633179055565b610ae233610a2a565b80610b0a575033600090815260056020526040902054610b0a906001600160a01b0316610a2a565b610b265760405162461bcd60e51b815260040161064790611458565b6000610b3863ffffffff841685611485565b90508060036000828254610b4c919061153c565b90915550610b5f9050620f42408261151a565b90506000620f4240610b7763ffffffff851687611485565b610b81919061151a565b9050610b9c8682610b9285896113c4565b61075c91906113c4565b610bca7f000000000000000000000000000000000000000000000000000000000000000061075c838561153c565b60408051600081526020810191829052635260769b60e11b9091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a4c0ed3690610c27903390869060248101611554565b6020604051808303816000875af1158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a9190611436565b50505050505050565b620d2f0084101580610c855750600254155b610cc45760405162461bcd60e51b815260206004820152601060248201526f1c195c9a5bd9081d1bdbc81cda1bdc9d60821b6044820152606401610647565b683635c9adc5dea0000083101580610cdc5750600254155b610d165760405162461bcd60e51b815260206004820152600b60248201526a66656520746f6f206c6f7760a81b6044820152606401610647565b6001600160a01b03851660009081526004602052604090205415610d715760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b6044820152606401610647565b610d9c337f000000000000000000000000000000000000000000000000000000000000000085610e5b565b610da6844261153c565b6001600160a01b038616600081815260046020526040908190209290925590517f97326258efdae63280617ca33884e507791c2abeed7b82acd77f1853394ef94b9061092390879087908790879061157b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610e6e57600080fd5b6001600160a01b03831660009081526020819052604081208054839290610e969084906113c4565b90915550506001600160a01b03821660009081526020819052604081208054839290610ec390849061153c565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e4e91815260200190565b6001600160a01b038216610f2257600080fd5b8060026000828254610f34919061153c565b90915550506001600160a01b03821660009081526020819052604081208054839290610f6190849061153c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b8060026000828254610fbe91906113c4565b90915550506001600160a01b03821660009081526020819052604081208054839290610feb9084906113c4565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610fa0565b6000815180845260005b8181101561105457602081850181015186830182015201611038565b81811115611066576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061108e602083018461102e565b9392505050565b80356001600160a01b03811681146110ac57600080fd5b919050565b600080604083850312156110c457600080fd5b6110cd83611095565b946020939093013593505050565b6000806000606084860312156110f057600080fd5b6110f984611095565b925061110760208501611095565b9150604084013590509250925092565b60008083601f84011261112957600080fd5b50813567ffffffffffffffff81111561114157600080fd5b60208301915083602082850101111561115957600080fd5b9250929050565b6000806000806060858703121561117657600080fd5b61117f85611095565b935060208501359250604085013567ffffffffffffffff8111156111a257600080fd5b6111ae87828801611117565b95989497509550505050565b6000602082840312156111cc57600080fd5b5035919050565b6000602082840312156111e557600080fd5b61108e82611095565b60008060008060006060868803121561120657600080fd5b61120f86611095565b9450602086013567ffffffffffffffff8082111561122c57600080fd5b818801915088601f83011261124057600080fd5b81358181111561124f57600080fd5b8960208260051b850101111561126457600080fd5b60208301965080955050604088013591508082111561128257600080fd5b5061128f88828901611117565b969995985093965092949392505050565b803563ffffffff811681146110ac57600080fd5b600080604083850312156112c757600080fd5b823591506112d7602084016112a0565b90509250929050565b600080600080608085870312156112f657600080fd5b6112ff85611095565b935060208501359250611314604086016112a0565b9150611322606086016112a0565b905092959194509250565b60008060008060006080868803121561134557600080fd5b61134e86611095565b94506020860135935060408601359250606086013567ffffffffffffffff81111561137857600080fd5b61128f88828901611117565b6000806040838503121561139757600080fd5b6113a083611095565b91506112d760208401611095565b634e487b7160e01b600052601160045260246000fd5b6000828210156113d6576113d66113ae565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038516815283602082015260606040820152600061142c6060830184866113db565b9695505050505050565b60006020828403121561144857600080fd5b8151801515811461108e57600080fd5b6020808252601390820152723737ba1030b8383937bb32b21036b4b73a32b960691b604082015260600190565b600081600019048311821515161561149f5761149f6113ae565b500290565b6001600160a01b03848116825260406020808401829052908301849052600091859160608501845b878110156114f157836114de86611095565b16825293820193908201906001016114cc565b5098975050505050505050565b6020815260006115126020830184866113db565b949350505050565b60008261153757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561154f5761154f6113ae565b500190565b60018060a01b03841681528260208201526060604082015260006105f1606083018461102e565b84815283602082015260606040820152600061142c6060830184866113db56fea26469706673582212200a2e9f077ab13b83f377e7138feb10d45e70872a77ae7ca15252cd7119eb924a64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/Frankencoin.sol:Frankencoin",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16,
        "contract": "contracts/Frankencoin.sol:Frankencoin",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 18,
        "contract": "contracts/Frankencoin.sol:Frankencoin",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 389,
        "contract": "contracts/Frankencoin.sol:Frankencoin",
        "label": "reserveTarget",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 393,
        "contract": "contracts/Frankencoin.sol:Frankencoin",
        "label": "minters",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 397,
        "contract": "contracts/Frankencoin.sol:Frankencoin",
        "label": "positions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}