{
  "address": "0xEDe351ccEde593BCaA0603fDef7e6c0d0c616d1a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "other",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "zchfAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "limit_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chf",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "horizon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zchf",
      "outputs": [
        {
          "internalType": "contract IFrankencoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x781e23975d642d63866c4fd991e773f5a896ddb2850cc1b5002f5f006741213b",
  "receipt": {
    "to": null,
    "from": "0x0aB6527027EcFF1144dEc3d78154fce309ac838c",
    "contractAddress": "0xEDe351ccEde593BCaA0603fDef7e6c0d0c616d1a",
    "transactionIndex": 0,
    "gasUsed": "474824",
    "logsBloom": "0x
    "blockHash": "0x89d0bc043007b353458a7d08ece90fbdb1cec48c0fb6235f46e1f68f041911ba",
    "transactionHash": "0x781e23975d642d63866c4fd991e773f5a896ddb2850cc1b5002f5f006741213b",
    "logs": [],
    "blockNumber": 2127274,
    "cumulativeGasUsed": "474824",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB6d3b7d819cDFf7dC6838349314D8d40C284B117",
    "0x079909c5191fffF4AB4Ad7889B34821D4CE35f6b",
    "1000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "7cf77f9f93d5b0516774db7ea876a2dc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"other\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zchfAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chf\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"horizon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zchf\",\"outputs\":[{\"internalType\":\"contract IFrankencoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A minting contract for another CHF stablecoin that we trust.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StablecoinBridge.sol\":\"StablecoinBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function transferAndCall(address recipient, uint256 amount, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0xca95e6b6324b1c92dca4759b3da5fc251053691de885f2e23021eb5abdddea9c\",\"license\":\"MIT\"},\"contracts/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC677Receiver {\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0x40703acdfa2126286b117ad0cca84c0a4ca2d3b18586765186c9bdd8ad5cf744\",\"license\":\"MIT\"},\"contracts/IFrankencoin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IReserve.sol\\\";\\n\\ninterface IFrankencoin is IERC20 {\\n\\n    function suggestMinter(address _minter, uint256 _applicationPeriod, \\n      uint256 _applicationFee, string calldata _message) external;\\n\\n    function registerPosition(address position) external;\\n\\n    function denyMinter(address minter, address[] calldata helpers, string calldata message) external;\\n\\n    function reserve() external view returns (IReserve);\\n\\n    function isMinter(address minter) external view returns (bool);\\n\\n    function isPosition(address position) external view returns (address);\\n    \\n    function mint(address target, uint256 amount) external;\\n\\n    function mint(address target, uint256 amount, uint32 reservePPM, uint32 feePPM) external;\\n\\n    function burn(uint256 amountIncludingReserve, uint32 reservePPM) external;\\n\\n    function burnFrom(address payer, uint256 targetTotalBurnAmount, uint32 _reservePPM) external returns (uint256);\\n\\n    function burnWithReserve(uint256 amountExcludingReserve, uint32 reservePPM) external returns (uint256);\\n\\n    function burn(address target, uint256 amount) external;\\n\\n    function notifyLoss(uint256 amount) external;\\n\\n}\",\"keccak256\":\"0xabb33542d10c4922e9df1e5c64ef6e6c780a6deadd029488aebe5d6c374b39a3\",\"license\":\"MIT\"},\"contracts/IReserve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IReserve {\\n   function isQualified(address sender, address[] calldata helpers) external view returns (bool);\\n}\",\"keccak256\":\"0x0fe637cc8a87dd12b7a236a86c15d52990ea3224413a1ec0e776b093b44eca0d\",\"license\":\"MIT\"},\"contracts/StablecoinBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IERC677Receiver.sol\\\";\\nimport \\\"./IFrankencoin.sol\\\";\\n\\n/**\\n * A minting contract for another CHF stablecoin that we trust.\\n */\\ncontract StablecoinBridge {\\n\\n    IERC20 public immutable chf;\\n    IFrankencoin public immutable zchf;\\n\\n    uint256 public immutable horizon;\\n    uint256 public immutable limit;\\n\\n    constructor(address other, address zchfAddress, uint256 limit_){\\n        chf = IERC20(other);\\n        zchf = IFrankencoin(zchfAddress);\\n        horizon = block.timestamp + 52 weeks;\\n        limit = limit_;\\n    }\\n\\n    function mint(uint256 amount) external {\\n        mint(msg.sender, amount);\\n    }\\n\\n    function mint(address target, uint256 amount) public {\\n        chf.transferFrom(msg.sender, address(this), amount);\\n        mintInternal(target, amount);\\n    }\\n\\n    function mintInternal(address target, uint256 amount) internal {\\n        require(block.timestamp <= horizon, \\\"expired\\\");\\n        require(chf.balanceOf(address(this)) <= limit, \\\"limit\\\");\\n        zchf.mint(target, amount);\\n    }\\n    \\n    function burn(uint256 amount) external {\\n        burnInternal(msg.sender, msg.sender, amount);\\n    }\\n\\n    function burn(address target, uint256 amount) external {\\n        burnInternal(msg.sender, target, amount);\\n    }\\n\\n    function burnInternal(address zchfHolder, address target, uint256 amount) internal {\\n        zchf.burn(zchfHolder, amount);\\n        chf.transfer(target, amount);\\n    }\\n\\n    function onTokenTransfer(address from, uint256 amount, bytes calldata) external returns (bool){\\n        if (msg.sender == address(chf)){\\n            mintInternal(from, amount);\\n        } else if (msg.sender == address(zchf)){\\n            burnInternal(address(this), from, amount);\\n        } else {\\n            require(false, \\\"unsupported token\\\");\\n        }\\n        return true;\\n    }\\n    \\n}\",\"keccak256\":\"0xb8801203d600c495ac50a033e83c7471ac3f5cc94390985687c7548f057e0167\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61010060405234801561001157600080fd5b506040516108ed3803806108ed8339810160408190526100309161007b565b6001600160a01b03808416608052821660a052610051426301dfe2006100b7565b60c05260e052506100dd9050565b80516001600160a01b038116811461007657600080fd5b919050565b60008060006060848603121561009057600080fd5b6100998461005f565b92506100a76020850161005f565b9150604084015190509250925092565b600082198211156100d857634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c05160e05161079a6101536000396000818161018701526103d0015260008181609d01526103630152600081816101ae015281816102e4015281816104c1015261054701526000818160d7015281816101f2015281816102a5015281816103f201526105c7015261079a6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639dc29fac116100665780639dc29fac14610139578063a0712d681461014c578063a4c0ed361461015f578063a4d66daf14610182578063c4d4803a146101a957600080fd5b80631ce832b51461009857806337b272b0146100d257806340c10f191461011157806342966c6814610126575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100f97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c9565b61012461011f366004610658565b6101d0565b005b610124610134366004610682565b610276565b610124610147366004610658565b610284565b61012461015a366004610682565b61028f565b61017261016d36600461069b565b610299565b60405190151581526020016100c9565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6100f97f000000000000000000000000000000000000000000000000000000000000000081565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190610722565b506102728282610361565b5050565b610281333383610521565b50565b610272338383610521565b61028133826101d0565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036102da576102d58585610361565b610356565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303610315576102d5308686610521565b60405162461bcd60e51b81526020600482015260116024820152703ab739bab83837b93a32b2103a37b5b2b760791b60448201526064015b60405180910390fd5b506001949350505050565b7f00000000000000000000000000000000000000000000000000000000000000004211156103bb5760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b604482015260640161034d565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610465919061074b565b111561049b5760405162461bcd60e51b81526020600482015260056024820152641b1a5b5a5d60da1b604482015260640161034d565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b505050505050565b604051632770a7eb60e21b81526001600160a01b038481166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac90604401600060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016925063a9059cbb91506044016020604051808303816000875af1158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610722565b50505050565b80356001600160a01b038116811461065357600080fd5b919050565b6000806040838503121561066b57600080fd5b6106748361063c565b946020939093013593505050565b60006020828403121561069457600080fd5b5035919050565b600080600080606085870312156106b157600080fd5b6106ba8561063c565b935060208501359250604085013567ffffffffffffffff808211156106de57600080fd5b818701915087601f8301126106f257600080fd5b81358181111561070157600080fd5b88602082850101111561071357600080fd5b95989497505060200194505050565b60006020828403121561073457600080fd5b8151801515811461074457600080fd5b9392505050565b60006020828403121561075d57600080fd5b505191905056fea2646970667358221220c0f9c6322383e17b4480a7c79073fdb02bbf9e9e823c4e382c78c08d572ecfb564736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80639dc29fac116100665780639dc29fac14610139578063a0712d681461014c578063a4c0ed361461015f578063a4d66daf14610182578063c4d4803a146101a957600080fd5b80631ce832b51461009857806337b272b0146100d257806340c10f191461011157806342966c6814610126575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100f97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c9565b61012461011f366004610658565b6101d0565b005b610124610134366004610682565b610276565b610124610147366004610658565b610284565b61012461015a366004610682565b61028f565b61017261016d36600461069b565b610299565b60405190151581526020016100c9565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6100f97f000000000000000000000000000000000000000000000000000000000000000081565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190610722565b506102728282610361565b5050565b610281333383610521565b50565b610272338383610521565b61028133826101d0565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036102da576102d58585610361565b610356565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303610315576102d5308686610521565b60405162461bcd60e51b81526020600482015260116024820152703ab739bab83837b93a32b2103a37b5b2b760791b60448201526064015b60405180910390fd5b506001949350505050565b7f00000000000000000000000000000000000000000000000000000000000000004211156103bb5760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b604482015260640161034d565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610465919061074b565b111561049b5760405162461bcd60e51b81526020600482015260056024820152641b1a5b5a5d60da1b604482015260640161034d565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b505050505050565b604051632770a7eb60e21b81526001600160a01b038481166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac90604401600060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016925063a9059cbb91506044016020604051808303816000875af1158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610722565b50505050565b80356001600160a01b038116811461065357600080fd5b919050565b6000806040838503121561066b57600080fd5b6106748361063c565b946020939093013593505050565b60006020828403121561069457600080fd5b5035919050565b600080600080606085870312156106b157600080fd5b6106ba8561063c565b935060208501359250604085013567ffffffffffffffff808211156106de57600080fd5b818701915087601f8301126106f257600080fd5b81358181111561070157600080fd5b88602082850101111561071357600080fd5b95989497505060200194505050565b60006020828403121561073457600080fd5b8151801515811461074457600080fd5b9392505050565b60006020828403121561075d57600080fd5b505191905056fea2646970667358221220c0f9c6322383e17b4480a7c79073fdb02bbf9e9e823c4e382c78c08d572ecfb564736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A minting contract for another CHF stablecoin that we trust.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}